name: Deploy to Kubernetes

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  
      
      - name: Set Tag as Environment Variable
        #run: echo "::set-env name=IMAGE_TAG::$(date +'%Y%m%d%H%M%S')"
        run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # Build Docker image and push it to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t ${DOCKER_USERNAME}/bdtask:${{ env.IMAGE_TAG }} -f Dockerfile .
          docker push ${DOCKER_USERNAME}/bdtask:${{ env.IMAGE_TAG }}
     
      - name: Update Kubernetes resources
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          cd prod
           #kustomize edit set image argo-app=$DOCKER_USERNAME/argo-app:$GITHUB_SHA
           #kustomize edit set image bdtask=$DOCKER_USERNAME/bdtask:${{ env.IMAGE_TAG }}
           kustomize edit set image front=$DOCKER_USERNAME/bdtask:${{ env.IMAGE_TAG }}
           #kustomize edit set image bdtask=$DOCKER_USERNAME/bdtask:${{ env.IMAGE_TAG }}
           #cat kustomization.yml
        
      - name: Commit files
        run: |
          git config --local user.email "survivalmotivator@gmail.com"
          git config --local user.name "awscloude"
          git commit -am "rolling image to tag $GITHUB_SHA"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          #force_with_lease: true
          #ssh: true
          #branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          #github_token: ${{ env.TOKEN }}
          #github_token: ${{ secrets.PAT_TOKEN }}
          #repository: awscloude/problem
          #force: true
      
